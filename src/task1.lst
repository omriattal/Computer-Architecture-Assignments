     1                                  
     2                                  extern c_checkValidity
     3                                  extern printf
     4                                  
     5                                  section .data
     6 00000000 25640A00                    format: db "%d", 10, 0
     7                                  section .text
     8                                      global assFunc
     9                                  
    10                                  assFunc:
    11 00000000 55                          push ebp                    ;backup EBP
    12 00000001 89E5                        mov ebp,esp 
    13 00000003 60                          pushad                      ; backup registers
    14 00000004 9C                          pushfd
    15 00000005 8B5D08                      mov ebx,[ebp + 8]      ; get first argument
    16 00000008 8B4D0C                      mov ecx, [ebp + 12] 
    17 0000000B 51                          push ecx
    18 0000000C 53                          push ebx
    19 0000000D E8(00000000)                call c_checkValidity
    20 00000012 83F801                      cmp eax,1
    21 00000015 7402                        je subtruct
    22 00000017 7504                        jne adder
    23                                      subtruct:
    24 00000019 29CB                            sub ebx,ecx
    25 0000001B EB04                            jmp continue
    26                                      adder:
    27 0000001D 01CB                            add ebx,ecx
    28 0000001F EB00                            jmp continue                        ; assign esp to ebp - new activation frame                    ; backup eFlags                   ;save space for sum     ; get second argument
    29                                      continue:
    30 00000021 53                              push ebx
    31 00000022 68[00000000]                    push format                ; pushes the format char array
    32 00000027 E8(00000000)                    call printf                 ; sum ebx and ecx and store it in ebx            ; assign the value to the space allocated on the stack              ; calls printf
    33 0000002C 83C410                          add esp,16                  ;    add 8 to the esp - to be at the flags and registers backup
    34 0000002F 9D                              popfd                       ; restore flags value
    35 00000030 61                              popad                       ; restore registers value
    36 00000031 89EC                            mov esp, ebp                ;set the esp to the ebp
    37 00000033 5D                              pop ebp                 ; restore the ebp to original
    38                                  
    39                                  
    40                                  
